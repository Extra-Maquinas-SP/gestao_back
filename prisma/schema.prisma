// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id                   Int             @id @default(autoincrement())
  nome                 String
  email                String          @unique
  senha                String
  telefone             String          @unique
  tipo                 Tipo_usuarios
  leads                Leads[]
  leads_compartilhadas UsuariosLeads[]
  created_at           DateTime        @default(now())
  updated_at           DateTime        @default(now()) @updatedAt

  @@map("usuarios")
}

model Produtos {
  id           Int      @id @default(autoincrement())
  produtos     String   @unique
  categoria    String
  preco_tabela Float
  leads        Leads[]
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt

  @@map("produtos")
}

model Clientes {
  id         Int           @id @default(autoincrement())
  nome       String
  tipo       Tipo_clientes
  documento  String
  endereco   Enderecos     @relation(fields: [enderecoId], references: [id])
  enderecoId Int           @unique
  leads      Leads[]
  created_at DateTime      @default(now())
  updated_at DateTime      @default(now()) @updatedAt

  @@map("clientes")
}

model Enderecos {
  id          Int       @id @default(autoincrement())
  uf          String
  municipio   String
  bairro      String
  rua         String
  numero      Int
  complemento String?
  cliente     Clientes?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now()) @updatedAt

  @@map("enderecos")
}

model Leads {
  id                      Int             @id @default(autoincrement())
  usuario                 Usuarios        @relation(fields: [usuarioId], references: [id])
  usuarioId               Int             @unique
  cliente                 Clientes        @relation(fields: [clienteId], references: [id])
  clienteId               Int             @unique
  produto                 Produtos        @relation(fields: [produtoId], references: [id])
  produtoId               Int             @unique
  observasoes             String[]
  status                  Status_leads    @relation(fields: [status_leadsId], references: [id])
  status_leadsId          Int
  compartilhar            Boolean         @default(false)
  usuarios_compartilhados UsuariosLeads[]
  lembrete                String[]
  created_at              DateTime        @default(now())
  updated_at              DateTime        @default(now()) @updatedAt

  @@map("leads")
}

model UsuariosLeads {
  id             Int      @id @default(autoincrement())
  usuario        Usuarios @relation(fields: [usuarioId], references: [id])
  usuarioId      Int
  Leads          Leads    @relation(fields: [leadsUsuarioId], references: [usuarioId])
  leadsUsuarioId Int
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt

  @@map("usuarios_leads")
}

model Status_leads {
  id         Int      @id @default(autoincrement())
  leads      Leads[]
  motivo     String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("status_leads")
}

enum Tipo_usuarios {
  gestor
  secretaria
  vendedor
}

enum Tipo_clientes {
  PF
  PJ
}
